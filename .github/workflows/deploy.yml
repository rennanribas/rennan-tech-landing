name: Build and Deploy Rennan Tech

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  actions: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
          aws-region: us-east-1
          role-skip-session-tagging: true

      - name: Load secrets from Parameter Store
        run: |
          ECR_REPOSITORY_URI=$(aws ssm get-parameter --name "/doppler/rennan-tech/ECR_REPOSITORY_URI_LANDING" --with-decryption --query 'Parameter.Value' --output text)
          DEPLOY_TOKEN=$(aws ssm get-parameter --name "/doppler/rennan-tech/DEPLOY_TOKEN" --with-decryption --query 'Parameter.Value' --output text)
          echo "ECR_REPOSITORY_URI=${ECR_REPOSITORY_URI}" >> $GITHUB_ENV
          echo "DEPLOY_TOKEN=${DEPLOY_TOKEN}" >> $GITHUB_ENV

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build and push image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t $ECR_REPOSITORY_URI:$IMAGE_TAG .
          docker push $ECR_REPOSITORY_URI:$IMAGE_TAG
          docker tag $ECR_REPOSITORY_URI:$IMAGE_TAG $ECR_REPOSITORY_URI:latest
          docker push $ECR_REPOSITORY_URI:latest

      - name: Trigger deployment
        run: |
          curl -X POST \
            -H "Authorization: token $DEPLOY_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository_owner }}/infra-rennan-tech/dispatches \
            -d '{"event_type":"deploy-app","client_payload":{"service":"rennan-tech","repository":"${{ github.repository }}","image_tag":"${{ github.sha }}"}}'
